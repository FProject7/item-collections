<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project 7 - Item Images</title>
    <style>
        ::-webkit-scrollbar {
            width: 7px;
        }

        /* Track */
        ::-webkit-scrollbar-track {
            background-color: transparent;
            border-radius: 50px;
        }
        
        /* Handle */
        ::-webkit-scrollbar-thumb {
            background: #1d283a; 
            border-radius: 50px;
        }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: #1d283a; 
        }

        body {
            background-color: #030711;
            color: #fff;
            font-family: Arial, sans-serif;
        }
        header {
            padding: 10px;
            background-color: #1d283a;
            position: relative;
        }
        #search-bar {
            width: calc(100% - 100px);
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #1d283a;
            background-color: #1d283a;
            color: #fff;
            margin-right: 10px;
        }
        #filter-button {
            background: #1d283a;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 8px 16px;
            cursor: pointer;
        }
        #filter-dropdown {
            display: none;
            position: absolute;
            top: 40px;
            right: 0;
            background: #1d283a;
            border: 1px solid #1d283a;
            border-radius: 4px;
            padding: 10px;
            margin-top: 5px;
            z-index: 1000;
        }
        #filter-dropdown label {
            display: block;
            margin: 5px 0;
        }
        #image-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 10px;
            width: 100%;
            padding: 5px;
        }
        .image-item {
            cursor: pointer;
            width: 150px;
            height: 150px;
            background-color: #030711;
            border: 1px solid #1d283a9f;
            border-radius: 15px;
            display: flex;
            justify-content: center;
            align-items: center; /* Center content vertically */
            position: relative;
            overflow: hidden;
            transition: all 0.15s ease-in-out;
        }
        .image-item:hover {
            border: 1px solid #1d283a;
        }
        .image-item:hover::after {
            content: "Click to download";
            position: absolute;
            top: 10px;
            left: 10px;
            background: rgba(0, 0, 0, 0.7);
            color: #fff;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 14px;
            opacity: 1;
        }

        .image-item::after {
            content: "";
            position: absolute;
            top: 10px;
            left: 10px;
            background: rgba(0, 0, 0, 0.7);
            color: #fff;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 14px;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
        }
        .image-item img {
            width: 80%;
            height: 80%;
            opacity: 0;
            transition: all 0.2s ease-in-out;
            display: block;
        }
        .image-item img.loaded {
            opacity: 1;
        }
        .image-text {
            position: absolute;
            bottom: 5px;
            left: 5px;
            background: rgba(0, 0, 0, 0.6);
            padding: 5px;
            font-size: 10px;
            border-radius: 5px;
        }
        footer {
            padding: 10px;
            background-color: #1d283a;
            text-align: center;
        }
    </style>
</head>
<body>
    <header>
        <input type="search" id="search-bar" placeholder="Search...">
        <button id="filter-button">Filter</button>
        <div id="filter-dropdown" style="display:none;"></div>
    </header>
    <main id="image-grid"></main>
    <footer>
        <!-- footer content -->
    </footer>
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const imageGrid = document.getElementById('image-grid');
            const searchBar = document.getElementById('search-bar');
            const filterButton = document.getElementById('filter-button');
            const filterDropdown = document.getElementById('filter-dropdown');

            let allImages = [];
            let categories = [];
            let selectedCategories = [];

            // Fetch initial data
            async function fetchData() {
                try {
                    const imagesResponse = await fetch('/api/images');
                    allImages = await imagesResponse.json();

                    const categoriesResponse = await fetch('/api/categories');
                    categories = await categoriesResponse.json();

                    populateFilters(categories);
                    displayImages(allImages);
                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            }

            function populateFilters(categories) {
                filterDropdown.innerHTML = '';
                categories.forEach(category => {
                    const categoryLabel = document.createElement('label');
                    const categoryCheckbox = document.createElement('input');
                    categoryCheckbox.type = 'checkbox';
                    categoryCheckbox.value = category.name;
                    categoryCheckbox.className = 'category-checkbox';
                    categoryCheckbox.addEventListener('change', handleFilterChange);
                    categoryLabel.appendChild(categoryCheckbox);
                    categoryLabel.appendChild(document.createTextNode(category.name));
                    filterDropdown.appendChild(categoryLabel);
                });
            }

            function displayImages(images) {
                imageGrid.innerHTML = '';
                images.forEach(image => {
                    const imageUrl = `/images/${encodeURIComponent(image.category)}/${encodeURIComponent(image.file)}`;
                    const imageItem = document.createElement('div');
                    imageItem.className = 'image-item';

                    const fileNameWithoutExtension = image.file.split('.').slice(0, -1).join('.');

                    imageItem.innerHTML = `
                        <img data-src="${imageUrl}" alt="" />
                        <div class="image-text">${fileNameWithoutExtension}</div>
                    `;
                    imageItem.addEventListener('click', () => {
                        const a = document.createElement('a');
                        a.href = imageUrl;
                        a.download = image.file;
                        a.click();
                    });
                    imageGrid.appendChild(imageItem);
                });
                lazyLoadImages();
            }

            function lazyLoadImages() {
                const images = document.querySelectorAll('.image-item img');
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            if (!img.src) {
                                img.src = img.dataset.src;
                            }
                            img.classList.add("loaded");
                            observer.unobserve(img);
                        }
                    });
                });

                images.forEach(img => observer.observe(img));
            }

            function handleFilterChange() {
                selectedCategories = Array.from(filterDropdown.querySelectorAll('.category-checkbox:checked')).map(cb => cb.value);
                filterImages();
            }

            function filterImages() {
                const searchQuery = searchBar.value.toLowerCase();
                
                const filteredImages = allImages.filter(image => {
                    const imageUrl = `/images/${encodeURIComponent(image.category)}/${encodeURIComponent(image.file)}`;
                    const categoryMatches = selectedCategories.length === 0 || selectedCategories.includes(image.category);
                    const searchMatches = image.file.toLowerCase().includes(searchQuery);

                    return categoryMatches && searchMatches;
                });

                displayImages(filteredImages);
            }

            searchBar.addEventListener('input', filterImages);
            filterButton.addEventListener('click', () => {
                filterDropdown.style.display = filterDropdown.style.display === 'none' ? 'block' : 'none';
            });

            // Initial fetch of data
            fetchData();
        });
    </script>
</body>
</html>
